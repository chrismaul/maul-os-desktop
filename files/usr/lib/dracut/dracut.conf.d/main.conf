# PUT YOUR CONFIG IN separate files
# in /etc/dracut.conf.d named "<name>.conf"
# SEE man dracut.conf(5) for options
early_microcode="yes"
hostonly="no"

dracutmodules+=" bash debug "
dracutmodules+=" systemd systemd-initrd crypt sd-lvm tpm "
dracutmodules+=" kernel-modules qemu sd-fix udev-rules verity mount-modules "


add_drivers+=" squashfs btrfs "

filesystems="squashfs btrfs"

source /usr/lib/os-release

ROOT_HASH=$(cat /output/root.verity-info.txt | grep "Root hash:" | cut -f 2)
kernel_cmdline=""
kernel_cmdline+=" rd.luks.name=bed94fe4-038f-493f-8fac-e7f273138738=cryptroot "
kernel_cmdline+=" rd.luks.options=bed94fe4-038f-493f-8fac-e7f273138738=tpm2-device=auto "
#kernel_cmdline+=" rd.luks.key=bed94fe4-038f-493f-8fac-e7f273138738=/tmp/crypto_keyfile.bin "
kernel_cmdline+=" root=/dev/mapper/root "
#kernel_cmdline+=" systemd.debug_shell"
#kernel_cmdline+=" rd.rescue"
#kernel_cmdline+=" systemd.journald.forward_to_console=true"
kernel_cmdline+=" random.trust_cpu=on "
kernel_cmdline+=" systemd.volatile=yes rd.systemd.verity=yes "
kernel_cmdline+=" systemd.verity_root_data=/dev/root/maul-os-$BUILD_ID "
kernel_cmdline+=" systemd.verity_root_hash=/dev/root/maul-os-$BUILD_ID-verity "
kernel_cmdline+=" roothash=$ROOT_HASH "
for MOD_INFO in /output/modules_${kernel}_verity-info.txt
do
  MOD_VERS=$(echo $MOD_INFO | cut -d _ -f 2)
  MODULES_HASH=$(cat $MOD_INFO | grep "Root hash:" | cut -f 2)
  kernel_cmdline+=" mod_hash.$MOD_VERS=$MODULES_HASH "
done

if [ -e "/etc/secureboot/db.key" ]
then
  uefi_secureboot_cert="/etc/secureboot/db.crt"
  uefi_secureboot_key="/etc/secureboot/db.key"
fi
